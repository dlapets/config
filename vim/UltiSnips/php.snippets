snippet gs "PHP Shit" b
public function get$1()
{
    return $this->${1/\w+\s*/\l$0/g};
}

public function set$1($${1/\w+\s*/\l$0/g})
{
    $this->${1/\w+\s*/\l$0/g} = $${1/\w+\s*/\l$0/g};
    return $this;
}

$0
endsnippet




# fuck you

snippet g "PHP getter" b
public function get$1()
{
    return $this->${1/\w+\s*/\l$0/g};
}

$0
endsnippet


snippet s "PHP setter" b
public function set$1($${1/\w+\s*/\l$0/g})
{
    $this->${1/\w+\s*/\l$0/g} = $${1/\w+\s*/\l$0/g};
    return $this;
}

$0
endsnippet

snippet pri "PHP private function" b
private function $1($2)
{
    $0
}

endsnippet

snippet pub "PHP public function" b
public function $1($2)
{
    $0
}

endsnippet

snippet pro "PHP protected function" b
protected function $1($2)
{
    $0
}

endsnippet

snippet class "Stupid class" b
<?php

namespace `!p snip.rv = string.replace(string.replace(os.path.dirname(path), 'src', 'Ghub'), '/', '\\')`;

class `!p snip.rv = string.replace(fn, '.php', '')`$1
{
    $0
}
endsnippet

snippet dnd "Dump'n'Die" b

header("Content-Type: text/plain");
var_dump($input); die();
$0
endsnippet
